AWSTemplateFormatVersion: '2010-09-09'
Description: 'HTTP API Sample'

Resources:
  LambdaServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  
  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |-
          exports.handler = async (event, context) => {
            console.log("EVENT: \n" + JSON.stringify(event, null, 2));
            return '{"message": "Hello, World!!"}';
          }
      Role: !GetAtt LambdaServiceRole.Arn
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - LambdaServiceRole


  HttpApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: HttpApiSample
      ProtocolType: HTTP

  HttpApiDefaultStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref HttpApi
      StageName: "$default"
      AutoDeploy: true



  HttpApiHelloIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref HttpApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt Lambda.Arn
      PayloadFormatVersion: '2.0'


  HttpApiHelloIntegrationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt Lambda.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpApi}/*/*/hello"
      
  HttpApiHelloRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref HttpApi
      RouteKey: GET /hello
      AuthorizationType: NONE
      Target: !Sub "integrations/${HttpApiHelloIntegration}"